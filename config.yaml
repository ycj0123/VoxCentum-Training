# HyperPyYaml prefix usage:
# "!new:" class: construct instance automatically
# "!name:" function/class: call manually to construct class instance
# "!ref" alias system
# See https://github.com/speechbrain/HyperPyYAML for more

# Path related
training_meta: manifest/manifest_filtered/training.txt
validation_meta: manifest/manifest_filtered/validation.txt
class_ids: manifest/manifest_filtered/class_ids.json
checkpoint: null # will keep training if not `null`
save_path: saved_model_filtered_ecapa # actual name will be ckpt/mmdd_savepath

# dataloader
train:
    num_workers: 0
    batch_size: 64
val:
    num_workers: 0
    batch_size: 128

# network
model: !name:models.ecapa_tdnn.ECAPA_TDNN
# model: !name:models.x_vector.X_vector
num_epochs: 50
# always saves the best valid checkpoint despite save_epoch and save_step
# save_step is prioritized
save_epoch: 1
save_step: null # int or `null`

# optimizer
optimizer: !name:torch.optim.Adam
    lr: 4e-4
    weight_decay: 0.000002
    betas: (0.9, 0.98)
    eps: 1e-9

# feature params
n_fft: 512
win_length: 400
hop_length: 160
power: 1
min_dur_sec: 5 # pad every sequence to this length
sample_sec: 5 # should not be bigger than min_dur_sec
n_mels: 64 # used by MelSpectrogram and MFCC_Delta
n_mfcc: 13  # used by MFCC_Delta

# ========== <feature: uncomment to use feature> ==========

# feature: !new:torchaudio.transforms.Spectrogram
#     n_fft: !ref <n_fft>
#     win_length: !ref <win_length>
#     hop_length: !ref <hop_length>
#     power: !ref <power>
#     normalized: window # window or frame_length

# feature: !new:torchaudio.transforms.MelSpectrogram
#     n_fft: !ref <n_fft>
#     n_mels: !ref <n_mels>
#     win_length: !ref <win_length>
#     hop_length: !ref <hop_length>
#     power: !ref <power>

feature: !new:modules.mfcc.MFCC_Delta
    mfcckwargs:
        n_mfcc: !ref <n_mfcc>
        melkwargs:
            n_fft: !ref <n_fft>
            n_mels: !ref <n_mels>
            win_length: !ref <win_length>
            hop_length: !ref <hop_length>
            power: !ref <power>

#  ====================== </feature> ======================

# data augmentation
timemasking: !new:torchaudio.transforms.TimeMasking
    time_mask_param: 5
    p: 0.5

freqmasking: !new:torchaudio.transforms.FrequencyMasking
    freq_mask_param: 10

# combine feature with data augmentation
transforms:
    names: 
        - feature
        - time_masking
        - freq_masking
    modules:
        - !ref <feature>
        - !ref <timemasking>
        - !ref <freqmasking>